#### Usuário ####

DONE REQF 1: O sistema deve permitir o cadastro de usuários.
DONE REQF 2: Os usuários poderão ter os determinados papéis: Administrador, Secretaria, Professor.
DONE REQF 3: Um usuário só pode ter um papel.
DONE REQF 4: Um usuário deve possuir nome, matricula, email. Sendo o nome e matricula únicos e o email, um email válido.
DONE REQF 5: Um usuário deve autenticar-se no sistema utilizando matricula e senha. O email será utilizado para recuperação de senha.
DONE REQF 6: Qualquer usuário pode alterar seu próprio email.
    DONE: Criar view home diferente para cada tipo de usuario
    DONE: Não permitir que um usuario esteja logado em mais que um role
    DONE: Criar páginas de SignUp/Edit
DONE REQF 7: Apenas usuários administradores podem cadastrar ou atualizar usuários com papel administrador ou secretaria.
DONE REQF 8: Usuário com papel administrador pode ler todos os usuários.
DONE REQF 9: Usuário com papel secretaria pode cadastrar, atualizar ou ler usuários com papel professor.

Encontrar forma de alterar senha?

##### Aluno #####

DONE REQF 10: O sistema deve permitir o gerenciamento de alunos do curso.
DONE REQF 11: Um aluno deve possuir nome, matrícula e email. O nome e a matrícula devem ser únicos. O email deve ser válido.


##### Turma #####

DONE REQF 12: Uma turma deve ter nome, dias de semana, horário de início, horário de término,
DONE: carga horária mínima, carga horária máxima e capacidade. Deve estar associada a 1 professor e a n alunos.
DONE: O número de alunos não deve ser maior que a capacidade da turma.
DONE REQF 13: Uma turma deve ser gerenciada por usuários com papel secretaria.


##### Professor #####

DONE REQF 14: Um professor deve estar associado a uma ou mais turmas.
TODO:Um professor não pode estar associado a duas ou mais turmas com sobrepossição de horário.

-- Não funcionais:

REQNF 1: O sistema deve ser incrito na linguagem Ruby na versão no mínimo 2.4.1 e utilizando o framework Ruby on Rails na versão no mínimo 5.2.0. 
REQNF 2: O sistema deve persistir os dados de maneira consistente em um banco relacional.
REQNF 3: O sistema deve ter interface amigável. Para isso podem ser utilizados alguma biblioteca de estilos como o Bootstrap ou o Materialize.
REQNF 4: O sistema deve estra com cobertura de testes de pelo menos 60%. Para isso deverá ser utilizado as bibliotecas do Rspec seguindo as boas práticas do Better Specs.


outros:

TODO: Permitir que um professor veja suas próprias turmas

